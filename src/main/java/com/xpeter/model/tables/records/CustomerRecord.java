/*
 * This file is generated by jOOQ.
 */
package com.xpeter.model.tables.records;


import com.xpeter.model.tables.Customer;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record5;
import org.jooq.Row5;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class CustomerRecord extends UpdatableRecordImpl<CustomerRecord> implements Record5<String, String, String, Boolean, String> {

    private static final long serialVersionUID = -50326896;

    /**
     * Setter for <code>ASM.CUSTOMER.USERNAME</code>.
     */
    public void setUsername(String value) {
        set(0, value);
    }

    /**
     * Getter for <code>ASM.CUSTOMER.USERNAME</code>.
     */
    public String getUsername() {
        return (String) get(0);
    }

    /**
     * Setter for <code>ASM.CUSTOMER.PASSWORD</code>.
     */
    public void setPassword(String value) {
        set(1, value);
    }

    /**
     * Getter for <code>ASM.CUSTOMER.PASSWORD</code>.
     */
    public String getPassword() {
        return (String) get(1);
    }

    /**
     * Setter for <code>ASM.CUSTOMER.FULLNAME</code>.
     */
    public void setFullname(String value) {
        set(2, value);
    }

    /**
     * Getter for <code>ASM.CUSTOMER.FULLNAME</code>.
     */
    public String getFullname() {
        return (String) get(2);
    }

    /**
     * Setter for <code>ASM.CUSTOMER.GENDER</code>.
     */
    public void setGender(Boolean value) {
        set(3, value);
    }

    /**
     * Getter for <code>ASM.CUSTOMER.GENDER</code>.
     */
    public Boolean getGender() {
        return (Boolean) get(3);
    }

    /**
     * Setter for <code>ASM.CUSTOMER.EMAIL</code>.
     */
    public void setEmail(String value) {
        set(4, value);
    }

    /**
     * Getter for <code>ASM.CUSTOMER.EMAIL</code>.
     */
    public String getEmail() {
        return (String) get(4);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<String> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record5 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row5<String, String, String, Boolean, String> fieldsRow() {
        return (Row5) super.fieldsRow();
    }

    @Override
    public Row5<String, String, String, Boolean, String> valuesRow() {
        return (Row5) super.valuesRow();
    }

    @Override
    public Field<String> field1() {
        return Customer.CUSTOMER.USERNAME;
    }

    @Override
    public Field<String> field2() {
        return Customer.CUSTOMER.PASSWORD;
    }

    @Override
    public Field<String> field3() {
        return Customer.CUSTOMER.FULLNAME;
    }

    @Override
    public Field<Boolean> field4() {
        return Customer.CUSTOMER.GENDER;
    }

    @Override
    public Field<String> field5() {
        return Customer.CUSTOMER.EMAIL;
    }

    @Override
    public String component1() {
        return getUsername();
    }

    @Override
    public String component2() {
        return getPassword();
    }

    @Override
    public String component3() {
        return getFullname();
    }

    @Override
    public Boolean component4() {
        return getGender();
    }

    @Override
    public String component5() {
        return getEmail();
    }

    @Override
    public String value1() {
        return getUsername();
    }

    @Override
    public String value2() {
        return getPassword();
    }

    @Override
    public String value3() {
        return getFullname();
    }

    @Override
    public Boolean value4() {
        return getGender();
    }

    @Override
    public String value5() {
        return getEmail();
    }

    @Override
    public CustomerRecord value1(String value) {
        setUsername(value);
        return this;
    }

    @Override
    public CustomerRecord value2(String value) {
        setPassword(value);
        return this;
    }

    @Override
    public CustomerRecord value3(String value) {
        setFullname(value);
        return this;
    }

    @Override
    public CustomerRecord value4(Boolean value) {
        setGender(value);
        return this;
    }

    @Override
    public CustomerRecord value5(String value) {
        setEmail(value);
        return this;
    }

    @Override
    public CustomerRecord values(String value1, String value2, String value3, Boolean value4, String value5) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached CustomerRecord
     */
    public CustomerRecord() {
        super(Customer.CUSTOMER);
    }

    /**
     * Create a detached, initialised CustomerRecord
     */
    public CustomerRecord(String username, String password, String fullname, Boolean gender, String email) {
        super(Customer.CUSTOMER);

        set(0, username);
        set(1, password);
        set(2, fullname);
        set(3, gender);
        set(4, email);
    }
}
